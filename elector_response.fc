() process_elector_response (int flags, slice in_msg, int msg_value) impure {
  if( flags & 1) {
    ;; Should we process bounced (that is errors) responses somehow?
    return (); 
  }
  int incoming_op = in_msg~load_uint(32);
  int query_id = in_msg~load_uint(64);
  (slice _1, int total_active, int _3, int reward_per_gram, int _5, cell _6, cell requests, cell _8, cell transfers) = load_data();
  (cell request_cell, int found) = requests~udict_delete_get_ref?(64, query_id);
  throw_unless(201, found);
  slice request = request_cell.begin_parse();
  int stored_op = request~load_uint(32);
  (int time, int response_query_id, slice s_addr) = (request~load_uint(32),request~load_uint(64),request~load_msg_addr());
  int receipt_attachment = 10000000;

  if ( stored_op == 0x47657424) {
    ;; If stake returns  correctly op = 0xf96f7324, else 0xfffffffe
    ;; https://github.com/newton-blockchain/ton/blob/master/crypto/smartcont/elector-code.fc#L403-426
    if(incoming_op == 0xf96f7324) {
      update_reward_on_stake_return(_1, total_active, _3, reward_per_gram, _5, _6, requests, _8, transfers, msg_value);
      ;; notify sender about success
      return send_receipt_message(s_addr, stored_op + 0x10000000, response_query_id, 0, receipt_attachment, 1);
    }
    if(incoming_op == 0xfffffffe) {
      return send_receipt_message(s_addr, stored_op + 0x20000000, response_query_id, 0, receipt_attachment, 1);
    }
    return send_receipt_message(s_addr, stored_op + 0x0000f000, response_query_id, incoming_op, receipt_attachment, 1);
  }

  if ( stored_op == 0x4e73744b) {
    ;; Possible answers 0xf374484c (on success) and 0xee6f454c (on error)
    ;; https://github.com/newton-blockchain/ton/blob/master/crypto/smartcont/elector-code.fc#L173
    if(incoming_op == 0xf374484c) {
      int amount = request~load_grams();
      transfers~udict_add_builder?(32, now(), begin_cell().store_grams(amount));
      save_data(_1, total_active, _3, reward_per_gram, _5, _6, requests, _8, transfers);
      return send_receipt_message(s_addr, stored_op + 0x10000000, response_query_id, 0, receipt_attachment, 1);
    }
    if(incoming_op == 0xee6f454c) {
      int error_code = in_msg~load_uint(32);
      return send_receipt_message(s_addr, stored_op + 0x20000000, response_query_id, error_code, receipt_attachment, 1);
    }
    return send_receipt_message(s_addr, stored_op + 0x0000f000, response_query_id, incoming_op, receipt_attachment, 1);
  }

  if ( stored_op == 0x56744370) {
    ;; Possible answers are 0xd6745240 + [-3: 2]
    ;; https://github.com/newton-blockchain/ton/blob/master/crypto/smartcont/elector-code.fc#L581
    int base_op = 0xd6745240;
    if ( (incoming_op == base_op + 1) | (incoming_op == (base_op + 1)) ) {
      return send_receipt_message(s_addr, stored_op + 0x10000000, response_query_id, incoming_op - base_op, receipt_attachment, 1);
    }
    if ( (incoming_op <= base_op) & (incoming_op >= (base_op - 3) )) {
      return send_receipt_message(s_addr, stored_op + 0x20000000, response_query_id, base_op - incoming_op, receipt_attachment, 1);
    }
    return send_receipt_message(s_addr, stored_op + 0x0000f000, response_query_id, incoming_op, receipt_attachment, 1);
  }
  
  return ();
}
