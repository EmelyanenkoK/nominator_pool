() recv_internal(cell in_msg_cell, slice payload) {
  var cs = in_msg_cell.begin_parse();
  var flags = cs~load_uint(4);  ;; int_msg_info$0 ihr_disabled:Bool bounce:Bool bounced:Bool
  if (flags & 1) {
    ;; ignore all bounced messages
    return ();
  }
  slice s_addr = cs~load_msg_addr();
  slice master_address = get_data().begin_parse().skip_bits(64);
  if(equal_slices(master_address, s_addr)) {
    slice destination = payload~load_msg_addr();
    builder msg = begin_cell()
      .store_uint(0x18, 6)
      .store_slice(destination)
      .store_grams(0)
      .store_uint(0, 1 + 4 + 4 + 64 + 32 + 1 + 1)
      .store_slice(payload);
    send_raw_message(msg.end_cell(), 64);
  }
  else {
    raw_reserve(1000000000, 2);
    builder msg = begin_cell()
      .store_uint(0x18, 6)
      .store_slice(master_address)
      .store_grams(0)
      .store_uint(0, 1 + 4 + 4 + 64 + 32 + 1 + 1)
      .store_slice(s_addr) ;; TODO potentially too much data for cell
      .store_slice(payload)
    send_raw_message(msg.end_cell(), 64);
  }
  
}
